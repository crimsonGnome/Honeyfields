# import * from './generated/prisma.graphql'
type SuccessMessage {
  message: String
}

type Mutation {
  createItem(
    id: ID
    title: String
    description: String
    price: Int
    image: [String]
    largeImage: [String]
    sold: Boolean
    recurringItem: Boolean
    orderFormat: String
  ): Item!
  updateItem(
    id: ID!
    title: String
    price: Int
    description: String
    sold: Boolean
    recurringItem: Boolean
    orderFormat: String
  ): Item!
  deleteItem(id: ID!): Item
  signup(
    email: String!
    password: String!
    name: String!
    shippingAddress: String!
  ): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirm: String!): User
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
  createOrder(token: String!): Order!
  createFilter(filter: String!): Filter!
  updateFilter(id: ID!, filter: String!): Filter
  deleteFilter(id: ID!): Filter
  updateUser(adminView: Boolean): User!
  createEvent(id: ID, title: String, description: String, image: String): Event!
  deleteEvent(id: ID!): Event
  updateEvent(id: ID, title: String, description: String): Event
  updateShipping(id: ID, shippingAddress: String, name: String): User
}

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  ordersConnection(where: OrderWhereInput): OrderConnection!
  ordersConnectionUser(where: OrderWhereInput): OrderConnection!
  eventsConnection: EventConnection!
  me: User
  users: [User]!
  order(id: ID!): Order
  orders(orderBy: OrderOrderByInput, skip: Int, first: Int): [Order]!
  filters(where: FilterWhereInput, orderBy: FilterOrderByInput): [Filter]!
  events(
    where: EventWhereInput
    orderBy: EventOrderByInput
    skip: Int
    first: Int
  ): [Event]!
  event(where: EventWhereUniqueInput!): Event
}

type User {
  id: ID!
  name: String!
  email: String!
  shippingAddress: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
  orders: [OrderItem]
  adminView: Boolean
}
